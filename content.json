{"meta":{"title":"To be a better coder.--Allen Lee","subtitle":"Read the fucking source code.","description":"Talk is cheap,show me your codes.","author":"Allen Lee","url":"http://yoursite.com"},"pages":[{"title":"Categories","date":"2016-06-08T07:11:19.971Z","updated":"2016-06-08T06:20:02.495Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2016-06-08T07:11:19.974Z","updated":"2016-06-08T06:20:02.496Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"About","date":"2016-06-08T07:11:19.944Z","updated":"2016-06-08T06:20:02.494Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"The blog theme you may fall in love with, coming to Hexo. Preview InstallationInstall1$ git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus Icarus requires Hexo 3.0 and above. Enable Rename themes\\icarus\\_config.yml.example to themes\\icarus\\_config.yml; Copy themes\\icarus\\_config.yml.site.example to your hexo blog’s root directory and rename it to _config.yml; Copy themes\\icarus\\_source\\* into your hexo blog’s directory source; Then modify theme setting in _config.yml to icarus. Update12cd themes/icarusgit pull ConfigurationTheme configuration example1234567891011121314151617181920212223242526272829303132333435363738394041# Headermenu: Home: . Archives: archives Categories: categories # you need to add extra page to enable this, please see the config below. Tags: tags # you need to add extra page to enable this, please see the config below. About: about# Contentexcerpt_link: Read Morefancybox: true# Sidebarsidebar: rightwidgets:- recent_posts- category- tag- tagcloud- archivethumbnail: true# Contactscontacts: github: http://github.com/ppoffice/hexo-theme-icarus twitter: '#' facebook: '#' dribbble: '#' rss: atom.xml# Linkslinks: Hexo: http://hexo.io# Miscellaneousgoogle_analytics:favicon: favicon.pngtwitter:google_plus:fb_admins:fb_app_id: excerpt_link - Cooperate with &lt;!-- more --&gt; tag to show only part of the article in index pages. fancybox - Enable Fancybox. contacts - Your social network links, RSS link, etc. widgets - Widgets displaying in sidebar. thumbnail - Whether to show post thumbnails in the sidebar and archive pages. links - Links displayed in the link widget. google_analytics - Google Analytics ID. favicon - Favicon path. Site configuration example123456789101112131415# Sitetitle: Icarussubtitle:description: Hexo theme - Icarusauthor: PPOfficeauthor_title: 'Web Developer &amp; Designer'avatar: css/images/avatar.pnglocation: 'Harbin, China'language: entimezone:...# Disqusdisqus_shortname: author - Your name. author_title - Title to your occupation. avatar - Your avatar image link. location - Where you live in. disqus_shortname - Your Disqus shortname. Post Thumbnail &amp; BannerYou can add a thumbnail and a banner to each post by adding the following lines into your post source files’ front-matter:123456title: Demodate: 2015-01-01...# add thosethumbnail: http://example.com/thumbnail.jpgbanner: http://example.com/banner.jpg Custom Categories &amp; Tags PagesTo enable custom categories page and tags page, just copy the categories folder and tags folder under your theme’s _source foler into your site’s source folder. Then edit theme’s _config.yml and add the following lines:123456# Headermenu: ... Categories: categories # -&gt; add this line Tags: tags # -&gt; and add this line ... LanguagesEnglish and Simplified Chinese are the default languages of the theme. You can add translations in the languages folder and change the default language in blog’s _config.yml. 1language: zh-CN FeaturesProfile SidebarA nice place to show yourself. You can add your own information in your site’s _config.yml Post Banner &amp; ThumbnailThanks to atika, you can now add thumbnails and banners to every post to create better reading experience. Responsive LayoutIcarus knows on what screen size you are browsering the website, and reorganize the layout to fit your device. Custom Categories &amp; Tags PagesGet your categories and tags listed in single pages to make your blog more methodic. FancyboxIcarus uses Fancybox to showcase your photos. You can use Markdown syntax or fancybox tag plugin to add your photos. 1![img caption](img url) SidebarIcarus provides 6 built-in widgets: recent_posts category archives tag tagcloud links All of them are enabled by default. You can edit them in widget setting. DevelopmentRequirements Grunt 0.4+ Hexo 3.0+ Grunt tasks default - Download Fancybox and Font Awesome. fontawesome - Only download Font Awesome. fancybox - Only download Fancybox. clean - Clean temporarily files and downloaded files."}],"posts":[{"title":"初探Activity生命周期","slug":"ActivityLife","date":"2016-07-06T12:40:31.000Z","updated":"2016-07-06T13:59:38.901Z","comments":true,"path":"2016/07/06/ActivityLife/","link":"","permalink":"http://yoursite.com/2016/07/06/ActivityLife/","excerpt":"","text":"1. 理解几个重要的生命周期回调函数android activity的生命周期是必须深入理解和掌握的，才能更好的开发出性能优良的app。 回调函数 适合处理的任务 onCreate（） 初始化UI，及其他组件 onStart（） 很快调用完进入Resume状态 onResume（） Activity完全可见，可交互，有焦点 onPause（） Activity被遮挡但可视，不可交互 onStop（） 完全不可见，失去焦点，如进入别的Activity或APP onDestroy（） 资源回收,一般不用重写，大部分清理工作应该在onPause（） &amp; onStop（）中完成 onRestart（） 从Pause –&gt; restart –&gt; start –&gt; resume finish（） 自己结束 将安卓各个生命周期理解为爬金字塔，可以很形象的记忆并理解。 2. Activity 的暂停与继续其中三个回调函数可以长时间停留，与用户产生交互 onResume（） onStop（） onPause（） 当一个Activity被部分遮挡，如弹出对话框，此时则会进入Pause状态。 如果被完全遮挡，则进入stop状态。 onPause（）状态通常需要处理如下任务： 停止一些消耗cpu的任务，如播放动画等 保存一些需要保存的数据 释放系统资源，如broadcast receivers ，传感器的引用（如摄像头，GPS，蓝牙等）一些耗电多的资源。 注意： 在onPause（）中不要进行耗时任务，如数据库操作，这样会影响UI组件的显示效果。在onStop中处理耗时任务较为合适 3. Activity的 停止与重启几个典型的Stop场景 用户打开最近使用的APP，选择使用其他APP，此时便进入stop状态。 从当前Activity跳转到另外一个Activity，则前一个进入stop状态，如果用户按back键返回，则重新restart。 Start / ReStart Activity当Activity从后台stop变为前台可见时，系统回调onRestart（），onStart（）方法。 注意：由于系统会保留处于Stop截断的Activity实例各种状态，一般的APP没太多必要重写 onRestart 4. 重建与恢复Activity销毁当系统因为内存过低等其他因素销毁了Activity（非正常销毁），尽管Activity Instance实例被回收，但是其状态被系统保存下来，以备恢复之需。 注意：旋转屏幕也会销毁与重建Activity，因为可能需要加载不同的适配资源。 恢复Instance State存在一个key-value键值对集合中，即 Bundle对象。 注意：所有拥有Id的 View都会自动保存用户的输入，如edittext等。所以不必为此担心。 如果要存储Acivity的额外信息数据到bundle中，则需要重写onSaveInstanceState() 回调函数。 当Activity销毁时系统会自动传入一个bundle对象负责存储数据，当你需要用到之前的状态来重建Activity时，系统会传入刚才保存的bunlde对象到onCreate（） &amp; onRestoreInstanceState() 方法中。","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"}],"tags":[{"name":"android activity","slug":"android-activity","permalink":"http://yoursite.com/tags/android-activity/"}]},{"title":"JDBC要点记录","slug":"JDBC要点记录","date":"2016-06-30T14:55:26.000Z","updated":"2016-07-06T14:16:46.006Z","comments":true,"path":"2016/06/30/JDBC要点记录/","link":"","permalink":"http://yoursite.com/2016/06/30/JDBC要点记录/","excerpt":"","text":"概述：JDBC就是java定义的通用的数据库API。通过不同数据库驱动可以方便连接不同的数据库如mysql，oracle，sql server等。 JDBC的使用1.导入第三方库需要导入相应的开发包，如使用MySql则导入mysql-connector-java-5.1.39.zip 2.获取Connnection有几种方式不同连接到数据库可以采用将相应信息如数据库url ，数据库名，密码等信息写入property配置文件。 配置文件在项目开发中十分常见通用，可以更好的解耦，如当你更换url，数据库，或者使用其他厂商数据库时，只需要改配置文件即可。 注意清理数据库相关资源也是不可或缺的。 代码片段： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990 Connection connection = null; Statement statement = null; ResultSet resultSet = null; try &#123; //---------------最原始的链接方法 ，耦合性较强-------------------------------- /* // step1: 驱动管理器 ，注册驱动 DriverManager.registerDriver(new Driver()); //step2: get connection Connection MySQLConnection = DriverManager.getConnection( \"jdbc:mysql://localhost:3306/homeworkdb\", \"root\", \"root\"); //step3: create statement java.sql.Statement statement = MySQLConnection.createStatement(); */ //--------------利用Class类加载器 搭配 property配置文件进行解耦---------------- Properties dbconfigProperties = new Properties(); dbconfigProperties.load(new FileInputStream(new File(\"DBConf.prop\"))); //通过类加载器，加载配置文件中指定的数据库驱动，创建mysql driver对象 Class.forName(dbconfigProperties.getProperty(\"dbdriver\")).newInstance(); connection = DriverManager.getConnection(dbconfigProperties.getProperty(\"dburl\"), dbconfigProperties); statement = connection.createStatement(); //step4: create sql resultSet = statement.executeQuery(\"select * from tutors;\"); // do sth with resultSet &#125; catch (SQLException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; catch (FileNotFoundException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; catch (IOException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; catch (InstantiationException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; catch (IllegalAccessException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; catch (ClassNotFoundException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; finally &#123; //释放资源 if (connection != null) &#123; try &#123; connection.close(); &#125; catch (SQLException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125; if (statement != null) &#123; try &#123; statement.close(); &#125; catch (SQLException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125; if (resultSet != null) &#123; try &#123; resultSet.close(); &#125; catch (SQLException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125; &#125; &#125; JDBC - CRUD操作CRUD-增删改查是数据库也是软件开发的常见任务。 关键还是 编写 SQL语句的功力。而作为开发工程师（非DBA，架构师等）最重要的数据库能力就是各种select语句的编写（join关联多表等）。 JDBC操作数据库用到的几个关键对象： Connection Statement PrepareStatement （预编译可以提高效率等，同时可以结合批处理addbatch（）） ResultSet 具体的使用方法查看文档即可。当需要更好的封装JDBC进行单纯地数据库操作（而非ORM等高级对象映射），可以自己简单封装一下，不过效率肯定不能恭维（练习一下造轮子功力&amp;封装能力即可）。 真正通用的方案是选择Apache开源库： apache jdbc dbutils 官网给出了具体的使用示范。 轻量小乔，方便快捷。可以将resaultset转化为JavaBean，list ，map 等各种数据类型。简化了不少工作。","categories":[{"name":"数据库","slug":"数据库","permalink":"http://yoursite.com/categories/数据库/"}],"tags":[{"name":"MySql","slug":"MySql","permalink":"http://yoursite.com/tags/MySql/"},{"name":"jdbc","slug":"jdbc","permalink":"http://yoursite.com/tags/jdbc/"},{"name":"apche","slug":"apche","permalink":"http://yoursite.com/tags/apche/"}]},{"title":"XML摘要","slug":"XMLnotes","date":"2016-06-15T08:33:16.000Z","updated":"2016-07-06T14:17:04.793Z","comments":true,"path":"2016/06/15/XMLnotes/","link":"","permalink":"http://yoursite.com/2016/06/15/XMLnotes/","excerpt":"","text":"1. XML简介 xml是可扩展标记语言，用户可以自己定义数据。 xml文档可读性良好，方便表示现实中的数据。 xml在许多语言中都具有相同的接口和概念，如DOM，在javascript 和 java 中通用。 通过Parser解析器处理xml文档 2. 用途 关键将XML理解为一颗DOM Tree，操作树数据结构即可。 常用于前端和后端数据传输（json，protobuf）。 ajax中利用xml异步加载部分数据，提高页面加载效率 常用作配置文件，页面布局文件（html，android） 3. 语法及规范 有且只有一个根标签 标签必须配对（可单个出现如) 严格区分大小写（html不区分） 元素可以有多个属性 CDATA文本区 特殊字符需要转义 4. XML文档约束加强xml文档的编写规范，更加清晰，严谨，可读性增强，避免不必要的错误。 能看懂了解即可，需要用时查询。 4.1 DTD约束4.2 Schema约束 5 解析XML CRUD操作熟练XML的增删查改 5.1 浏览器现代浏览器都支持js，并会自动生成HTML DOM对象（符合xml），所以可以直接用js处理。 5.2 javajava内置JAXP有两种方式： DOM ：读取XML全部内容，在内存中生成一棵DOM Tree，与js接口基本相同，不过操作麻烦。 SAX ：基于回调函数， 按行读取方式，节省内存。 DOM4J 开源库 （需要导包） 支持 XPATH （关键：利用文件路径名方式遍历DOM Tree） 高效快捷 操作方便 许多框架使用如hibernate Spring等…","categories":[],"tags":[{"name":"xml","slug":"xml","permalink":"http://yoursite.com/tags/xml/"}]},{"title":"设计模式之单例模式","slug":"blog","date":"2016-06-08T16:11:40.000Z","updated":"2016-06-30T14:58:26.750Z","comments":true,"path":"2016/06/09/blog/","link":"","permalink":"http://yoursite.com/2016/06/09/blog/","excerpt":"","text":"","categories":[{"name":"设计模式","slug":"设计模式","permalink":"http://yoursite.com/categories/设计模式/"}],"tags":[{"name":"设计模式","slug":"设计模式","permalink":"http://yoursite.com/tags/设计模式/"}]}]}